name: "SAFE Network Tesnet Workflow Action"
description: "GitHub action to deploy a testnet using Digital Ocean droplets"
inputs:
  action:
    description: "Task to be carried out. Accepts 'create' or 'destroy'"
    default: "create"
  aws-access-key-id:
    description: "AWS Access Key ID"
    required: true
  aws-access-key-secret:
    description: "AWS Access Key"
    required: true
  aws-default-region:
    description: "AWS Default region"
    default: eu-west-2
  do-token:
    description: "Digital Ocean Authorization token"
    required: true
  name:
    description: "The name of the testnet"
    required: true
  node-count:
    description: "Number of nodes to be deployed"
    default: 50
  provider:
    description: "The cloud provider. Valid values are 'aws' or 'digital-ocean'."
    default: "digital-ocean"
    required: true
  ssh-secret-key:
    description: "SSH key used to run the nodes on the Digital Ocean droplets"
    required: true
  testnet-tool-repo-branch:
    description: >
      The branch for the testnet tool repository. This is to enable using forks to test changes to
      the testnet tool. Will default to the `digital-ocean-refactor` branch.
    default: digital-ocean-refactor
  testnet-tool-repo-user:
    description: >
      The user or organisation for the testnet tool repository. This is to enable using forks to
      test changes to the testnet tool. Will default to the `jacderida`.
    default: jacderida

runs:
  using: "composite"
  steps:
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
    - name: Build node and run testnet on Digital Ocean
      if: inputs.action == 'create'
      env:
        DO_PAT: ${{ inputs.do-token }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-access-key-secret }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-default-region }}
        NODE_COUNT: ${{ inputs.node-count }}
        TESTNET_TOOL_BRANCH: ${{ inputs.testnet-tool-repo-branch }}
        TESTNET_TOOL_USER: ${{ inputs.testnet-tool-repo-user }}
        WORKING_DIR: ${{ github.action_path }}
      shell: bash
      run: |
        git clone --single-branch --depth 1 --branch $TESTNET_TOOL_BRANCH \
          https://github.com/$TESTNET_TOOL_USER/sn_testnet_tool
    - name: Destroy Testnet
      if: inputs.action == 'destroy'
      env:
        DO_PAT: ${{ inputs.do-token }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-access-key-secret }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-default-region }}
        TESTNET_ID: ${{ inputs.testnet-id }}
        WORKING_DIR: ${{ github.action_path }}
      shell: bash
      run: |
        git clone https://github.com/maidsafe/sn_testnet_tool $WORKING_DIR/sn_testnet_tool --depth 1
        cd $WORKING_DIR/sn_testnet_tool
        terraform init
        terraform workspace select $TESTNET_ID || terraform workspace new $TESTNET_ID
        $WORKING_DIR/sn_testnet_tool/down.sh $WORKING_DIR/id_rsa "-auto-approve"
        # It's necessary to change workspace here because deletion of the currently active workspace
        # is not permitted.
        terraform workspace select alpha
        terraform workspace delete $TESTNET_ID

branding:
  icon: "globe"
  color: "blue"